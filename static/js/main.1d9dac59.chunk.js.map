{"version":3,"sources":["components/display/Display.tsx","components/display/index.ts","components/buttons/Buttons.tsx","components/buttons/index.ts","app/Calculator.ts","components/calculator/Calculator.tsx","components/calculator/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Display","info","result","className","Buttons","writeInfo","swith","back","resultFunc","map","v","i","onClick","func","undefined","oper","calc","str","String","evaluate","error","Calculator","React","setInfo","setResult","slice","msg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAqBeA,ICnBAA,EDMf,YAA4C,IAA1BC,EAAyB,EAAzBA,KAAKC,EAAoB,EAApBA,OACnB,OACI,0BAASC,UAAU,mBAAnB,UACI,oBAAIA,UAAU,cAAd,SACKF,IAEL,oBAAIE,UAAU,cAAd,SACKD,Q,ME8BFE,IC3CAA,EDaf,YAA2D,IAAzCC,EAAwC,EAAxCA,UAQRC,EAAc,CAChB,KATkD,EAA9BC,KAUpB,IAVkD,EAAzBC,YAmB7B,OACI,yBAASL,UAAU,mBAAnB,SACI,oBAAIA,UAAU,cAAd,SApBuB,CAC3B,GAAG,GAAG,OAAO,IACb,IAAI,IAAI,IAAI,IACZ,IAAI,IAAI,IAAI,IACZ,IAAI,IAAI,IAAI,IACZ,GAAG,IAAI,IAAI,KAgBYM,KACX,SAACC,EAAEC,GAAH,OAAQ,oBAAIC,QAAS,YAXxB,SAACF,GACV,IAAMG,EAAOP,EAAMI,QACTI,IAAPD,EACCA,IAEAR,EAAUK,GAMwBK,CAAKL,IAAKP,UAAU,aAAtC,SAA4DO,GAAJC,W,gBE3BrEK,MATf,SAAcC,GACV,IACI,OAAOC,OAAOC,YAASF,IAEzB,MAAOG,GACL,MAAO,sBCmBAC,ICxBAA,EDIf,WAAsB,IAAD,EACKC,WAAe,IADpB,mBACZrB,EADY,KACNsB,EADM,OAESD,WAAe,IAFxB,mBAEZpB,EAFY,KAEJsB,EAFI,KAYjB,OACI,uBAAMrB,UAAU,mBAAhB,UACI,cAAC,EAAD,CAASF,KAAMA,EAAMC,OAAQA,IAC7B,cAAC,EAAD,CAASK,KANJ,WACTgB,EAAQtB,EAAKwB,MAAM,GAAG,KAKGjB,WATV,WACfgB,EAAUR,EAAKf,KAQoCI,UAZrC,SAACqB,GACfH,EAAQtB,EAAKyB,U,MEENC,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,OCOSyB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1d9dac59.chunk.js","sourcesContent":["import * as React from 'react';\nimport './styles.css'\n\ninterface PropDisplay{\n    info:string,\n    result:string\n}\n\nfunction Display({info,result}:PropDisplay){\n    return (\n        <section className=\"display__section\">\n            <h1 className='h1__display'>\n                {info}\n            </h1>\n            <h2 className='h2__display'>\n                {result}\n            </h2>\n        </section>\n    )\n}\n\nexport default Display","import Display from './Display'\n\nexport default Display;","\nimport * as React from 'react';\nimport './styles.css';\n\ninterface PropsButtons{\n    writeInfo:(msg:string)=>void;\n    back:()=>void;\n    resultFunc:()=>void;\n}\ninterface Swith{\n    back:()=>void,\n    '=':()=>void,\n    [key:string]:()=>void\n}\n\nfunction Buttons({writeInfo,back,resultFunc}:PropsButtons){\n    const value_buttons:string[] = [\n        '','','back','/',\n        '7','8','9','*',\n        '4','5','6','-',\n        '1','2','3','+',\n        '','0','.','='\n    ]\n    const swith:Swith = {\n        'back':back,\n        '=': resultFunc\n    }\n    const oper = (v:string)=>{\n        const func = swith[v];\n        if(func!==undefined)\n            func()\n        else\n            writeInfo(v);\n    }\n    return (\n        <section className=\"section__buttons\">\n            <ul className=\"ul__buttons\">\n                {value_buttons.map(\n                    (v,i)=> <li onClick={()=>{oper(v)}} className=\"li__butons\" key={i}>{v}</li>\n                )}\n            </ul>\n        </section>\n    )\n}\n\nexport default Buttons;","import Buttons from './Buttons';\n\nexport default Buttons;","import {evaluate} from 'mathjs'\n\nfunction calc(str:string){\n    try {\n        return String(evaluate(str));\n        \n    } catch (error) {\n        return \"Invalid Exprecion\"\n    }\n}\n\nexport default calc;","import * as React from 'react';\nimport Display from '../display';\nimport Buttons from '../buttons';\nimport './styles.css'\nimport calc from '../../app/Calculator'\n\nfunction Calculator(){\n    let [info, setInfo] = React.useState('');\n    let [result, setResult] = React.useState('');\n    const writeInfo = (msg:string)=>{\n        setInfo(info+msg);\n    }\n    const resultFunc = ()=>{\n        setResult(calc(info))\n    }\n    const back = () =>{\n        setInfo(info.slice(0,-1));\n    }\n    return (\n        <main className=\"calculator__main\">\n            <Display info={info} result={result}/>\n            <Buttons back={back} resultFunc = {resultFunc} writeInfo={writeInfo}/>\n        </main>\n    )\n}\n\nexport default Calculator;","import Calculator from './Calculator'\n\nexport default Calculator;","import React from 'react';\nimport Calc from './components/calculator';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calc/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}